<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--내가 만든 Mapper이름과 동일하게 지정-->
<mapper namespace="com.i7.eatit.domain.user.dao.LoginMapper">

    <!-- 내가 반환받고자 하는 값을 기준으로 작성한다.-->
    <resultMap id="userInfoMap" type="com.i7.eatit.domain.user.dto.UserInfoDTO">

        <id property="member_id" column="MEMBER_ID"/>

        <result property="email" column="EMAIL"/>
        <result property="password" column="PASSWORD"/>
        <result property="name" column="NAME"/>
        <result property="nickname" column="NICKNAME"/>
        <result property="loginMethod" column="LOGIN_METHOD"/>
        <result property="phoneNumber" column="PHONE_NUMBER"/>
        <result property="createdDate" column="CREATED_DATE"/>
        <result property="withdrawalStatus" column="WITHDRAWAL_STATUS"/>
        <result property="reportedCount" column="REPORTED_COUNT"/>

    </resultMap>


    <!-- 이메일 찾기 -->
    <resultMap id="userEmailMap" type="string">

        <result property="email" column="EMAIL"/>

    </resultMap>


    <!-- 비밀번호 찾기 -->
    <resultMap id="userPasswordMap" type="string">

        <result property="password" column="PASSWORD"/>

    </resultMap>


    <!--로그인-->

    <!-- id : 구문을 찾기 위해 사용될 수 있는 namespace 내 유일한 구분자.
         resultMap : 사용할 resultMap 의 id
         parameterType : 구문에 전달될 파라미터의 클래스명(패키지 경로 포함)이나 별칭-->

    <select id="selectUser" resultMap="userInfoMap" parameterType="hashmap">
        SELECT
                MEMBER_ID
                , EMAIL
                , PASSWORD
                , NAME
                , NICKNAME
                , LOGIN_METHOD
                , PHONE_NUMBER
                , CREATED_DATE
                , WITHDRAWAL_STATUS
                , REPORTED_COUNT
        from
                TBL_MEMBER
        where
                EMAIL = #{ email }
        and
                PASSWORD = #{ password }
    </select>


    <!-- 이메일 찾기 -->

    <!-- id : 구문을 찾기 위해 사용될 수 있는 namespace 내 유일한 구분자.
     resultMap : 사용할 resultMap 의 id
     parameterType : 구문에 전달될 파라미터의 클래스명(패키지 경로 포함)이나 별칭-->

    <select id="selectUserEmail" resultMap="userEmailMap" parameterType="string">
        SELECT
            EMAIL
        from
            TBL_MEMBER
        where
            NAME = #{ name }
        and
            PHONE_NUMBER = #{ phoneNumber }
    </select>


    <!-- 비밀번호 조회 -->

    <!-- id : 구문을 찾기 위해 사용될 수 있는 namespace 내 유일한 구분자.
     resultMap : 사용할 resultMap 의 id
     parameterType : 구문에 전달될 파라미터의 클래스명(패키지 경로 포함)이나 별칭-->

    <update id="updateUserRandomPassword" parameterType="hashmap" flushCache="true" statementType="PREPARED" timeout="20">
        UPDATE
                TBL_MEMBER
        SET
                PASSWORD = #{ password }
        WHERE
                EMAIL = #{ email }
        AND
                NAME = #{ name }
        AND
                PHONE_NUMBER = #{ phoneNumber }
    </update>

</mapper>